services:
  db:
    image: postgres:17
    user: root
    environment:
      - POSTGRES_USER=odoo
      - POSTGRES_PASSWORD=odoo18@2024
      - POSTGRES_DB=postgres
    restart: always
    volumes:
      - ./postgresql:/var/lib/postgresql/data

  odoo18:
    image: odoo:18
    user: root
    depends_on:
      - db
    tty: true
    command: --
    environment:
      - HOST=db
      - USER=odoo
      - PASSWORD=odoo18@2024
      - PIP_BREAK_SYSTEM_PACKAGES=1
      - PROXY_MODE=True
    volumes:
      - ./entrypoint.sh:/entrypoint.sh
      - ./addons:/mnt/extra-addons
      - ./etc:/etc/odoo
    restart: always

  redis:
    image: redis:latest
    restart: always

  n8n:
    image: n8nio/n8n
    restart: always
    environment:
      - N8N_HOST=${SUBDOMAIN_N8N}.${DOMAIN_N8N}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - NODE_ENV=production
      - WEBHOOK_URL=https://${SUBDOMAIN_N8N}.${DOMAIN_N8N}/
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - EXECUTIONS_DATA_PRUNE=true
      - EXECUTIONS_DATA_MAX_AGE=168
      - CACHE_TYPE=redis
      - CACHE_REDIS_HOST=redis
      - CACHE_REDIS_PORT=6379
      - CACHE_REDIS_DB=0
      - QUEUE_TYPE=redis
      - QUEUE_REDIS_HOST=redis
      - QUEUE_REDIS_PORT=6379
      - QUEUE_REDIS_DB=1
    depends_on:
      - redis
    volumes:
      - ./n8n_data:/home/node/.n8n

  npm:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      - '80:80'
      - '81:81'
      - '443:443'
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt
